//@version=4
study("WE Indicator", "WE", overlay=true)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// WE not ME (Bitcoin Indicator)
//
// Telegram: https://t.me/we_not_me
//
// Bitcoin Donations are accepted here at this BTC address
// 3Ph9wP4vgASFbFP9DAabZETycXY66ebA8Y 
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Moving Averages
showSMA20  = input(false, title="SMA 20")
showSMA21  = input(false, title="SMA 21")
showSMA50  = input(false, title="SMA 50")
showSMA200 = input(false, title="SMA 200")

// Strenght
showOverBought = input(true, title="Over Bought")
showOverSold   = input(true, title="Over Sold")

// Tom Demark
showBuyTDs  = input(true, title="TD Buy")
showSellTDs = input(true, title="TD Sell")
show1to8TDs = input(true, title="TD 1-8")

showCycleDump = input(true, title="Cycle Dump")

// showMovingAveragePI = input(false, title="Moving Average PI")
// showMayerMultiplier = input(false, title="Mayer Multiplier")

// Relative Strength helpers
rsi = rsi(close, 21)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// RSI Visual (Green IN, Red OUT)
//   Red for over bought, out, sell, take, profits, take a short position 
//   Green for oversold, in, buy, maybe take a long position
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Overbought

// Minute
overBoughtMinute1 = if (timeframe.period == '1' and showOverBought and rsi > 70)
    #df2121
bgcolor(overBoughtMinute1)
// overBoughtMinute2 = if (timeframe.period == '1' and showOverBought and rsi > 75)
//     #c04141
// bgcolor(overBoughtMinute2)
// overBoughtMinute3 = if (timeframe.period == '1' and showOverBought and rsi > 70)
//     #8b7575si
// bgcolor(overBoughtMinute3)

// Hourly
overBoughtHourly1 = if (timeframe.period == '60' and showOverBought and rsi > 82)
    #df2121
bgcolor(overBoughtHourly1)
overBoughtHourly2 = if (timeframe.period == '60' and showOverBought and rsi > 75)
    #c04141
bgcolor(overBoughtHourly2)
overBoughtHourly3 = if (timeframe.period == '60' and showOverBought and rsi > 70)
    #8b7575
bgcolor(overBoughtHourly3)

// 4 Hourly
overBought4Hourly1 = if (timeframe.period == '240' and showOverBought and rsi > 82)
    #df2121
bgcolor(overBought4Hourly1)
overBought4Hourly2 = if (timeframe.period == '240' and showOverBought and rsi > 75)
    #c04141
bgcolor(overBought4Hourly2)
overBought4Hourly3 = if (timeframe.period == '240' and showOverBought and rsi > 70)
    #8b7575
bgcolor(overBought4Hourly3)

// Daily 
overBoughtDaily1 = if (timeframe.isdaily and showOverBought and rsi > 82)
    #df2121
bgcolor(overBoughtDaily1)
overBoughtDaily2 = if (timeframe.isdaily and showOverBought and rsi > 77)
    #c04141
bgcolor(overBoughtDaily2)

// overBoughtDaily3 = if (timeframe.isdaily and showOverBought and rsi > 70)
//     #8b7575
// bgcolor(overBoughtDaily3)

// Weekly MORE TESTING
overBoughtWeekly1 = if (timeframe.isweekly and showOverBought and rsi > 87)
    #df2121
bgcolor(overBoughtWeekly1)
overBoughtWeekly2 = if (timeframe.isweekly and showOverBought and rsi > 85)
    #c04141
bgcolor(overBoughtWeekly2)
overBoughtWeekly3 = if (timeframe.isweekly and showOverBought and rsi > 80)
    #8b7575
bgcolor(overBoughtWeekly3)
overBoughtWeekly4 = if (timeframe.isweekly and showOverBought and rsi > 70)
    #8b7575
bgcolor(overBoughtWeekly4)

//////////////
// Monthly // MORE TESTING
overBoughtMonthly1 = if (timeframe.ismonthly and showOverBought and rsi > 93)
    #df2121
bgcolor(overBoughtMonthly1)
overBoughtMonthly2 = if (timeframe.ismonthly and showOverBought and rsi > 86)
    #c04141
bgcolor(overBoughtMonthly2)
overBoughtMonthly3 = if (timeframe.ismonthly and showOverBought and rsi > 85)
    #8b7575
bgcolor(overBoughtMonthly3)

////////////////////////////////////////////////////////////////////////////////
// OVER SOLD
////////////////////////////////////////////////////////////////////////////////

// Minute MORE TESTING
overSoldMinute1 = if (timeframe.period == '1' and showOverSold and rsi < 30)
    color.green
bgcolor(overSoldMinute1)
// overSoldMinute1 = if (timeframe.period == '60' and showOverSold and rsi < 38)
//     color.lime
// bgcolor(overSoldMinute1)

// Hourly MORE TESTING
overSoldHourly1 = if (timeframe.period == '60' and showOverSold and rsi < 40)
    color.green
bgcolor(overSoldHourly1)
overSoldHourly2 = if (timeframe.period == '60' and showOverSold and rsi < 38)
    color.lime
bgcolor(overSoldHourly2)

// 4 Hourly MORE TESTING
overSold4Hourly1 = if (timeframe.period == '240' and showOverSold and rsi < 35)
    color.green
bgcolor(overSold4Hourly1)
overSold4Hourly2 = if (timeframe.period == '240' and showOverSold and rsi < 28)
    color.lime
bgcolor(overSold4Hourly2)

// Daily  MORE TESTING
overSoldDaily1 = if (timeframe.isdaily and showOverSold and rsi < 32)
    color.green
bgcolor(overSoldDaily1)

overSoldDaily2 = if (timeframe.isdaily and showOverSold and rsi < 22)
    color.lime
bgcolor(overSoldDaily2)

// Weekly
overSoldWeekly1 = if (timeframe.isweekly and showOverSold and rsi < 40)
    color.green
bgcolor(overSoldWeekly1)
overSoldWeekly2 = if (timeframe.isweekly and showOverSold and rsi < 38)
    color.lime
bgcolor(overSoldWeekly2)

// Monthly
overSoldMontly1 = if (timeframe.ismonthly and showOverSold and rsi < 51)
    color.green
bgcolor(overSoldMontly1)
overSoldMontly2 = if (timeframe.ismonthly and showOverSold and rsi < 48)
    color.lime
bgcolor(overSoldMontly2)


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// TD Sequential 
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
buySignals = 0
buySignals := (close < close[4]) ? buySignals[1] == 9 ? 1 : buySignals[1] + 1 : 0

sellSignals = 0
sellSignals := (close > close[4]) ? sellSignals[1] == 9 ? 1 : sellSignals[1] + 1 : 0

BuyOrSell = max(buySignals, sellSignals)

// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 1, char="", text="1", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 2, char="", text="2", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 3, char="", text="3", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 4, char="", text="4", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 5, char="", text="5", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 6, char="", text="6", textcolor=color.green, location=location.belowbar, transp=40)
// plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 7, char="", text="7", textcolor=color.green, location=location.belowbar, transp=40)
plotchar(showBuyTDs and show1to8TDs and buySignals and BuyOrSell == 8, char="", text="8", textcolor=color.green, location=location.belowbar, transp=40)
plotshape(showBuyTDs and buySignals and BuyOrSell == 9, text="9",color=color.green, textcolor=color.green, size=size.tiny, location=location.belowbar, transp=0)

// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 1, char="", text="1", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 2, char="", text="2", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 3, char="", text="3", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 4, char="", text="4", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 5, char="", text="5", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 6, char="", text="6", textcolor=color.red, location=location.abovebar, transp=40)
// plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 7, char="", text="7", textcolor=color.red, location=location.abovebar, transp=40)
plotchar(showSellTDs and show1to8TDs and sellSignals and BuyOrSell == 8, char="", text="8", textcolor=color.red, location=location.abovebar, transp=40)
plotshape(showSellTDs and sellSignals and BuyOrSell == 9, text="9",color=color.red, textcolor=color.red, size=size.tiny, location=location.abovebar, transp=10)

// ALERTS 
// alertcondition(TD8buy, "TD 8 Buy", "TD 8 Buy") // Once per bar close
// alertcondition(TD9buy, "TD 9 Buy", "TD 9 Buy") // Once per bar close
// alertcondition(TD8sell, "TD 8 Sell", "TD 8 Sell") // Once per bar close
// alertcondition(TD9sell, "TD 9 Sell", "TD 9 Sell") // Once per bar close

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// EMA / SMA
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// EMA 
// out_ema7  = ema(close, 7)
// plot(out_ema7, color=red, linewidth=1, transp=0, title="EMA 7")

// out_ema50  = ema(close, 50)
// plot(out_ema50, color=olive, linewidth=1, transp=0, title="EMA 50")

// out_ema100  = ema(close, 100)
// plot(out_ema100, color=red, linewidth=2, transp=0, title="EMA 100")

// out_ema150  = ema(close, 150)
// plot(out_ema150, color=blue, linewidth=1, transp=0, title="EMA 150")

// out_ema200 = ema(200)
// plot(out_ema200, color=orange, linewidth=2, transp=0, title="EMA 200")

// SMA
sma21 = sma(close, 21)
sam21Data = if (showSMA21)
    sma21

sma50 = sma(close, 50)
sma50Data = if (showSMA50)
    sma50

sma100 = sma(close, 100)
sma150 = sma(close, 150)
sma111 = sma(close, 111)


sma200 = sma(close, 200)
sma200Data = if (showSMA200)
    sma200

sma333 = sma(close, 333)
sma350 = sma(close, 350)
sma1Y  = sma(close, 365)
sma2Y  = sma(close, 730)
// sma4Y = sma(close, 1460)
// sma7Y = sma(close, 2555)

// PLOTS DEBUGGING
plot(sma21, color=color.green, linewidth=1, transp=0, title="SMA 21")
// plot(sma50Data, color=color.aqua, linewidth=1, transp=0, title="SMA 50")
// plot(sma100, color=color.maroon, linewidth=1, transp=0, title="SMA 100")
// plot(sma150, color=color.purple, linewidth=1, transp=0, title="SMA 150")
plot(sma200, color=color.white, linewidth=1, transp=0, title="SMA 200")

plot(sma111, color=color.blue, linewidth=1, transp=0, title="ANGEL")
// plot(sma333, color=color.gray, linewidth=1, transp=0, title="SMA 333")
plot(sma350, color=color.white, linewidth=1, transp=0, title="GROWTH")

// plot(sma1Y, "A", color=color.green,  transp=0, linewidth=1)
// plot(sma2Y, color=color.gray, linewidth=1, transp=0, title="SMA 2Y")
// plot(sma2Y+100, "B", color=color.white,  transp=0, linewidth=1)

// plot(sma4Y, color=gray, linewidth=1, transp=0, title="SMA 4Y")
// plot(sma7Y, color=color.gray, linewidth=1, transp=0, title="SMA 7Y")


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Mayer Multiplier
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
plot(sma200 * 5, color=color.red,  transp=10, linewidth=1, title="MM 5")
plot(sma200 * 4.0, color=color.orange,  transp=20, linewidth=1, title="MM 4")
plot(sma200 * 2.4, color=color.green, transp=30, linewidth=1, title="MM 2.4")


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Signals
//
// ANGEL		BIRTH/DEATH
// GROWTH		sma350 v sma2Y
// DCA			IN/OUT
// CYCLE DCA	IN/OUT
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// ANGEL BIRTH
detectedAngelBirth = crossunder(sma350, sma111)
plotshape(showCycleDump and detectedAngelBirth, style=shape.labelup, location=location.belowbar, size=size.normal, transp=0, color=color.green, textcolor=color.white, text="ANGEL\nBIRTH")

// ANGEL DEATH
detectedAngelDeath = crossunder(sma111, sma350)
plotshape(showCycleDump and detectedAngelDeath, style=shape.labeldown,  location=location.abovebar, size=size.normal, transp=0, color=color.red, textcolor=color.white, text="ANGEL\nDEATH")

// GROWTH 
detectedGrowth = crossunder(sma350, sma2Y)
plotshape(showCycleDump and detectedGrowth, style=shape.labelup, location=location.belowbar, size=size.normal, transp=0, color=color.green, textcolor=color.white, text="GROWTH")

// LAZY ANGEL
detectedLasyAngel = crossunder(sma111, sma2Y+100)
plotshape(showCycleDump and detectedLasyAngel, style=shape.labeldown, location=location.abovebar, size=size.normal, transp=0, color=color.red, textcolor=color.white, text="LAZY\nANGEL")

// DCA IN (offset)
detectedDCABottom = crossunder(sma1Y - 150, (sma2Y))
plotshape(detectedDCABottom, style=shape.labelup, color=color.green, size=size.large, location=location.belowbar, transp=30, textcolor=color.white, text="DCA IN")

// DCA OUT 
detectedPreCycleOut = crossover(sma21, sma200 * 2.4)
plotshape(detectedPreCycleOut, style=shape.labeldown, size=size.large, transp=0, color=color.red, textcolor=color.white, text="DCA OUT")
// plot(detectedPreCycleOut, "Pre Cycle Out", color=color.white,  transp=0, linewidth=1)

// CYCLE DCA IN (offset)
detectedBottom = crossunder(sma1Y, (sma2Y + 100))
plotshape(detectedBottom, style=shape.labelup, color=color.green, size=size.large, location=location.belowbar, transp=30, textcolor=color.white, text="CYCLE\nDCA IN")

// CYCLE DCA OUT
fairValue = sma350 * 2
topDetected = crossunder(fairValue, sma111)
plotshape(topDetected, style=shape.labeldown, size=size.large, transp=20, color=color.red, textcolor=color.white, text="CYCLE\nDCA OUT")
plot(fairValue, "FAIR", color=color.white,  transp=0, linewidth=1)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Bitcoin Log Growth Curves
//
// Features
//
// RISK Curve
// Curve Projection
//
// Inspired by @Quantadelic aka Pinescript Pleb
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

darkOrLight =    input("Dark", title="Dark mode or Light mode?", options=["Dark", "Light"])
showFibs =       input("Y", title="Show Fibonacci Levels?", options=["Y","N"])
showExtensions = input("Y", title="Show Curve Projections?", options=["Y","N"])
highIntercept =  input(1.06930947, title="Top Curve Intercept", step=0.001)
highSlope =      input(0.00076, title="Top Curve Slope", step=0.00001)
lowIntercept =   input(-3.0269716, title="Bottom Curve Intercept", step=0.001)
lowSlope =       input(0.001329, title="Bottom Curve Slope", step=0.00001)

// TIME CALCS
timeIndex =     time < 1279670400000 ? 3.0 : (time - 1279670400000) / 86400000
weight =        (log10(timeIndex + 10) * timeIndex * timeIndex - timeIndex) / 30000
timeDelta =     time - time[1]

// TOP OF CHANNEL INTERCEPT & SLOPE CALCS
highSlopeCum =  highSlope * timeIndex
highLogDev =    timeIndex > 2 ? log(weight) + highIntercept + highSlopeCum : na

// BOTTOM OF CHANNEL INTERCEPT & SLOPE CALCS
lowSlopeCum = lowSlope * timeIndex
LowLogDev = timeIndex > 2 ? log(weight) + lowIntercept + lowSlopeCum : na

// TOTAL CHANNEL LOG RANGE
LogRange = highLogDev - LowLogDev

// FIBONACCI LEVELS
fib9098Calc = (LogRange * 0.9098) + LowLogDev
fib8541Calc = (LogRange * 0.8541) + LowLogDev
fib7639Calc = (LogRange * 0.7639) + LowLogDev
fib618Calc  = (LogRange * 0.618) + LowLogDev
midCalc     = (LogRange * 0.5) + LowLogDev
fib382Calc  = (LogRange * 0.382) + LowLogDev
fib2361Calc = (LogRange * 0.2361) + LowLogDev
fib1459Calc = (LogRange * 0.1459) + LowLogDev
fib0902Calc = (LogRange * 0.0902) + LowLogDev

// SCALE LOG VARIABLES TO LINEAR
highDev    = pow(2.718281828459, highLogDev)
fib9098Dev = showFibs == "Y" ? pow(2.718281828459, fib9098Calc) : na
fib8541Dev = showFibs == "Y" ? pow(2.718281828459, fib8541Calc) : na
fib7639Dev = showFibs == "Y" ? pow(2.718281828459, fib7639Calc) : na
fib618Dev  = showFibs == "Y" ? pow(2.718281828459, fib618Calc) : na
midDev     = pow(2.718281828459, midCalc)
fib382Dev  = showFibs == "Y" ? pow(2.718281828459, fib382Calc) : na
fib2361Dev = showFibs == "Y" ? pow(2.718281828459, fib2361Calc) : na
fib1459Dev = showFibs == "Y" ? pow(2.718281828459, fib1459Calc) : na
fib0902Dev = showFibs == "Y" ? pow(2.718281828459, fib0902Calc) : na
lowDev     = pow(2.718281828459, LowLogDev)

// COLOR SCHEME
colorBullScheme = darkOrLight == "Dark" ? color(color.red) : color(color.black)
colorBearScheme = darkOrLight == "Dark" ? color(color.green) : color(color.black)

// PLOTS - Fibonacci Levels
plot(highDev, color=colorBullScheme, transp=30, title="RISK 100%")
// plot(fib9098Dev, color=ColorScheme, transp=50, title="RISK  90.98%")
plot(fib8541Dev, color=colorBullScheme, transp=30, title="RISK 85.41% ")
plot(fib7639Dev, color=colorBullScheme, transp=30, title="RISK  76.39%")
plot(fib618Dev, color=colorBullScheme, transp=30, title="RISK 61.80%")
plot(midDev, color=color.white, transp=0, title="RISK 50%")
plot(fib382Dev, color=colorBearScheme, transp=30, title="RISK 38.20%")
plot(fib2361Dev, color=colorBearScheme, transp=30, title="RISK 23.61%")
// plot(fib1459Dev, color=colorBearScheme, transp=60, title="RISK 14.59%")
// plot(fib0902Dev, color=colorBearScheme, transp=50, title="RISK 9.02%")
plot(lowDev, color=colorBearScheme, transp=30, title="RISK 0%")

// Curve Extension drawing function and helper variables
ExtenZe(_i, _slope, _intercept) =>
    TI = ((time + timeDelta *_i) -1279670400000) / 86400000
    W = (log10(TI + 10) * TI * TI - TI) / 30000
    HSC = _slope * TI
    HLD = log(W) + _intercept + HSC
    HD = pow(2.718281828459, HLD)
    HD

// VARIABLES FOR ADJUSTING LENGTH OF CURVE EXTENSIONS RELATIVE TO CHART TIME-FRAME
forLoopStep = timeframe.ismonthly == 1 ? ceil( 12 / timeframe.multiplier) : 
              timeframe.isweekly == 1 ? ceil(26 / timeframe.multiplier) : 
              timeframe.isdaily == 1 ? ceil(91 / timeframe.multiplier) : 
              (timeframe.isminutes == 1) and (timeframe.multiplier > 59) ? ceil(10080 / timeframe.multiplier) : na
forLoopMax = na(forLoopStep) ? na : forLoopStep * 13

// MID CURVE SLOPE & INTERCEPT
midSlope =      (highSlope + lowSlope) * 0.5
midIntercept =  (highIntercept + lowIntercept) * 0.5

// COLOR SCHEME
ColorSchemeProjected =   darkOrLight == "Dark" ? color(color.blue) : color(color.black)

// CHECK IF LAST BAR & "Show Curve Projections" IS CHECKED, THEN DRAW CURVE EXTENZES
if barstate.islast and showExtensions == "Y"
    for i = 0 to forLoopMax-1 by forLoopStep
        // line.new(time + timeDelta * i, ExtenZe(i, highSlope, highIntercept), time + timeDelta * (i + forLoopStep), ExtenZe(i + forLoopStep, highSlope, highIntercept), xloc=xloc.bar_time, color=ColorSchemeProjected)
        
        line.new(time + timeDelta * i, ExtenZe(i, highSlope, highIntercept), time + timeDelta * (i + forLoopStep), ExtenZe(i + forLoopStep, highSlope, highIntercept), xloc=xloc.bar_time, color=ColorSchemeProjected)
        line.new(time + timeDelta * i, ExtenZe(i, midSlope, midIntercept), time + timeDelta * (i + forLoopStep), ExtenZe(i + forLoopStep, midSlope, midIntercept), xloc=xloc.bar_time, color=ColorSchemeProjected)
        line.new(time + timeDelta * i, ExtenZe(i, lowSlope, lowIntercept), time + timeDelta * (i + forLoopStep), ExtenZe(i + forLoopStep, lowSlope, lowIntercept), xloc=xloc.bar_time, color=ColorSchemeProjected)


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// DEVEVLOPMENT AREA
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Thomas 
// scalping idea i had earlier today with the sma gaps, i sent the code in this channel
////////////////////////////////////////////////////////////////////////////////
// sma720  = sma(close, 720)

// Code to test
// isCrossing = sma111 < sma350 and crossunder(sma350, sma720)
// isSmaOrderBullish = sma111 < sma350 and sma350 < sma720
// gapBetween_12H_5H = (sma720 - sma350) / sma350 * 100
// gapBetween_5H_1H = (sma350 - sma111) / sma111 * 100
// hasSignificantGap = sma111MovingBackUp and gapBetween_12H_5H * 1.5 < gapBetween_5H_1H

// showCycleIn = isCrossing or (isSmaOrderBullish and hasSignificantGap) ? 1 : 0
////////////////////////////////////////////////////////////////////////////////

// STUFF

// TEST WE:GROWTH WE:A 
// detectedAOver = crossover(sma350,sma1Y)
// plotshape(showCycleDump and detectedAOver, style=shape.labelup, location=location.belowbar, size=size.normal, transp=0, color=color.blue, textcolor=color.white, text="AO")
// detectedDumpMicro = if (showCycleDump and timeframe.period == '1' or timeframe.period == '5' or timeframe.period == '15' or timeframe.period == '30'  or timeframe.period == '60' or timeframe.period == '120' or timeframe.period == '180'  or timeframe.period == '240')
//     crossunder(sma150, sma111)
// plotshape(showCycleDump and detectedDumpMicro, style=shape.labeldown, size=size.normal, transp=0, color=color.orange, textcolor=color.white, text="ANGEL\nHIGH")

// detectedDumpMicroOver = if (showCycleDump and timeframe.period == '1' or timeframe.period == '5' or timeframe.period == '15' or timeframe.period == '30'  or timeframe.period == '60' or timeframe.period == '120' or timeframe.period == '180'  or timeframe.period == '240')
//     crossover(sma150, sma111)
// plotshape(showCycleDump and detectedDumpMicroOver, style=shape.labeldown, size=size.normal, transp=0, color=color.orange, textcolor=color.white, text="ANGEL\nLOW")

// plotshape(showSellTDs and sellSignals and BuyOrSell == 9, text="9",color=color.red, textcolor=color.red, size=size.tiny, location=location.belowbar, transp=10)

// capitualation_detected = crossunder(sma200, sma1Y)
// plotshape(capitualation_detected, style=shape.labelup, color=color.black, size=size.small, location=location.belowbar, transp=50, textcolor=color.white, text="\n\n\nCYCLE\nCAPITUALATION")
// alertcondition(capitualation_detected, title='Capitualation Detected', message='Cycle Capitualation')

// plot(bar_index % 6 != 0? sma111 : na, "SMA (angel)", color=color.gray, transp=30, linewidth=1, style=plot.style_linebr)
// plot(sma350, "SMA (close, 350)", color=#ffb200, transp=0, linewidth=1)
// plot(sma350  * 2, "SMA x2", color=#ff00f6,  transp=50, linewidth=1)
// plot(sma350  * 3, "SMA x 3", color=#ff00f6,  transp=0, linewidth=1)
// plot(sma350  * 5, "SMA x 5", color=#00f2ff, transp=0, linewidth=1)
// plot(sma350  * 8, "SMA x 8", color=yellow, transp=0, linewidth=1)
// // plot(sma350  * 13, "SMA x 13", color=gray, transp=0, linewidth=1)
// // plot(sma350  * 21, "SMA x 21", color=,  transp=0, linewidth=1)

// detectedBullTrap = crossunder(sma2Y, sma1Y + 5)
// plotshape(detectedBullTrap, style=shape.xcross, color=#FF0000, size=size.small, location=location.belowbar, transp=30, text="\n\nBULL TRAP")
// alertcondition(detectedBullTrap, title='Bull Trap Detected', message='Cycle Bull Trap Detected')

// detectedDeathCross = crossunder(out_sma50, out_sma200)
// plotshape(detectedDeathCross, style=shape.xcross, color=#FF0000, size=size.small, location=location.belowbar, transp=30, text="\n\nDEATH CROSS")
// alertcondition(detectedDeathCross, title='Death Cross Detected', message='Death Cross Detected')

// detectedGoldenCross = crossunder(out_sma200, out_sma50)
// plotshape(detectedGoldenCross, style=shape.xcross, color=#10ff00, size=size.small, transp=30, text="GOLDEN CROSS\n")
// alertcondition(detectedGoldenCross, title='Golden Cross Detected', message='Golden Cross Detected')

// smaMM = sma(close, 160)
// plot(smaMM * 2.4, color=green, linewidth=1, transp=60)
// plot(smaMM * 4.0, color=red, linewidth=1, transp=60)

// detectedCapitualation = crossunder(smaMM * 2.4, bar_index % 6 != 0 ? (sma350 * 2) : na)
// plotshape(detectedCapitualation, style=shape.xcross, color=red, size=size.small, transp=30, text="CAPITUALATION")
// alertcondition(detectedCapitualation, title='Capitualation Trap Detected', message='Cycle Capitualation Detected')

////////////////////////////////////////////////////////////////////////////////
// SECURITYS 
////////////////////////////////////////////////////////////////////////////////
// len_ma_long = input(350, minval=1, title="Long Moving Average")
// len_ma_short = input(111, minval=1, title="Short Moving Average")
// resolution = input('D', type=input.string, title="Time interval")
// is_show_ma = input(false, type=input.bool, title="Show Moving Averages ?")
// is_alert = input(true, type=input.bool, title="Send an alert on Pi Cycle Top?")

// ma_long = security(syminfo.tickerid, resolution, sma(close, len_ma_long)*2)
// ma_short = security(syminfo.tickerid, resolution, sma(close, len_ma_short))
// src = security(syminfo.tickerid, resolution, close)

// plot(is_show_ma?ma_long:na, color=color.green)
// plot(is_show_ma?ma_short:na, color=color.red)

// PiCycleTop = crossunder(ma_long, ma_short) ? src + (src/100 * 10) : na

// plotshape(PiCycleTop, style=shape.labeldown,size=size.normal, text="Pi Cycle top", color=color.red, textcolor=color.white, location=location.absolute)
// alertcondition(condition=PiCycleTop, title="Pi Cycle", message="The Pi Cycle Top has been reached, historically Bitcoin tops within 3 days of reaching this ratio")

//https://medium.com/@positivecrypto/the-golden-ratio-multiplier-c2567401e12a

////////////////////////////////////////////////////////////////////////////////