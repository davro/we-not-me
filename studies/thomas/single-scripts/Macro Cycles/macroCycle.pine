//@version=4
study(title="My Macro Cycle Indicator", shorttitle="mci", overlay=true)
var cycleOutCrossed = 0
var cycleInCrossed = 0
var currentPreInValue = 0
var isBtcUsd = syminfo.ticker == "BTCUSD"
var isDaily = timeframe.isdaily
var isHigherTimeFrame = timeframe.isdaily or timeframe.isweekly or timeframe.ismonthly
var showHTFBtcIndicators = isBtcUsd and isHigherTimeFrame

///////////////////////////////////////////////////////////
// Input
///////////////////////////////////////////////////////////

showMovingAverage = input(false, title="Show Moving Averages")
showPiCycle = showHTFBtcIndicators and input(false, title="Show PI Cycle And Mayers Multiple SMAs")
showSupportBandAndTrendFilling = input(false, title="Show Support Bands And Trend filling")
chartBackgroundColor = input(color.black, title="Chart Background Color", type=input.color)
showDCAIn = showHTFBtcIndicators and input(false, title="Show DCA IN (BTCUSD only)")
cmeHistoryBack = input(title="CME history back in days", type=input.integer, defval=20)
showTooltip = input(false, title="Show Info Tooltip")
fearAndGreedMarket = input("Crypto", title="Fear And Greed for :", options=['Crypto', 'Traditional'])
showKeltnerChannel = input(false, title="Show Keltner Channel")
showCmeGap = input(false, title="Show Future CME Gap")

///////////////////////////////////////////////////////////
// SMA
///////////////////////////////////////////////////////////

// SMA 21 Days - First dynamic support
sma_21_D  = security(syminfo.tickerid, '1D', sma(close, 21))
sma_21_D_color = #e5de14 // Yellow

// SMA 111 Days - Coming in pair with SMA 350 days * 2 for the PI Cycle TOP
sma_111_D = security(syminfo.tickerid, '1D', sma(close, 111))
sma_111_D_color = #5263e5 // Blue

// SMA 200 Days - Bull Market Support coming in pair with EMA 21
sma_200_D = security(syminfo.tickerid, '1D', sma(close, 200))
sma_200_D_color = #ffffff // White TRANSPARENT

sma_4_Y = security(syminfo.tickerid, '1D', sma(close, 1458))
sma_4_Y_color = #A15E49 // Redwood TRANSPARENT

sma_200_W = security(syminfo.tickerid, '1D', sma(close, 1400))
sma_200_W_color = #A15E49 // Redwood TRANSPARENT

sma_350_D_By_2 = security(syminfo.tickerid, '1D', sma(close, 350)*2)
sma_350_D_By_2_color = #FF312E // Red RYB

sma_7_W = security(syminfo.tickerid, '1D', sma(close, 49))
sma_7_W_color = #004F2D // Forest Green Traditional

///////////////////////////////////////////////////////////
// EMA
///////////////////////////////////////////////////////////

// EMA 21 Weeks - Bull Market Support coming in pair with SMA 200
ema_21_W  = security(syminfo.tickerid, '1D', ema(close, 147))
ema_21_W_color = #ffffff // White TRANSPARENT

///////////////////////////////////////////////////////////
// Mayers Multiple - PI Cycle Top
///////////////////////////////////////////////////////////

colorDashed(barIndex, color) => bar_index % 2 == 0 ? color : chartBackgroundColor

mayersMultiple06 = sma_200_D * 0.6
mayersMultiple06Color = colorDashed(bar_index, #ffffff)

mayersMultiple24 = sma_200_D * 2.4
mayersMultiple24Color = colorDashed(bar_index, #63ea54)

mayersMultiple5 = sma_200_D * 5
mayersMultiple5Color = colorDashed(bar_index, #e85376)

///////////////////////////////////////////////////////////
// Moving Averages Plot
///////////////////////////////////////////////////////////

sma21DaysToPlot = showMovingAverage ? sma_21_D : na
sma21DaysPlot = plot(sma21DaysToPlot, transp=90, color=sma_21_D_color, linewidth=1, title="SMA 21 D")

sma111DaysToPlot = showMovingAverage ? sma_111_D : na
sma111DaysPlot = plot(sma111DaysToPlot, transp=25, color=sma_111_D_color, linewidth=1, title="SMA 111 D")

ema21WeeksToPlot = showSupportBandAndTrendFilling ? ema_21_W : na
ema21WeeksPlot = plot(ema21WeeksToPlot, transp=100, color=ema_21_W_color, linewidth=1, title="EMA 21 W")
sma200DaysToPlot = showSupportBandAndTrendFilling ? sma_200_D : na
sma200DaysPlot = plot(sma200DaysToPlot, transp=100, color=sma_200_D_color, linewidth=1, title="SMA 200 D")

sma4YearsToPlot = showSupportBandAndTrendFilling ? sma_4_Y : na
sma4YearsPlot = plot(sma4YearsToPlot, transp=100, color=sma_4_Y_color, linewidth=1, title="SMA 4 Y")
sma200WeeksToPlot = showSupportBandAndTrendFilling ? sma_200_W : na
sma200WeeksPlot = plot(sma200WeeksToPlot, transp=100, color=sma_200_W_color, linewidth=1, title="SMA 200 W")

sma350DaysBy2ToPlot = showPiCycle ? sma_350_D_By_2 : na
sma350DaysBy2Plot = plot(sma350DaysBy2ToPlot, transp=25, color=sma_350_D_By_2_color, linewidth=1, title="SMA 350 D * 2")

sma7WeeksToPlot = showMovingAverage ? sma_7_W : na
sma7WeeksPlot = plot(sma7WeeksToPlot, transp=90, color=sma_7_W_color, linewidth=1, title="SMA 7 W")

///////////////////////////////////////////////////////////
// Mayers Multiple Plot
///////////////////////////////////////////////////////////

mayersMultiple06ToPlot = showPiCycle ? mayersMultiple06 : na
mayersMultiple06Plot = plot(mayersMultiple06ToPlot, transp=25, color=mayersMultiple06Color, linewidth=1, title="MM 0.6")

mayersMultiple24ToPlot = showPiCycle ? mayersMultiple24 : na
mayersMultiple24Plot = plot(mayersMultiple24ToPlot, transp=25, color=mayersMultiple24Color, linewidth=1, title="MM 2.4")

mayersMultiple5ToPlot = showPiCycle ? mayersMultiple5 : na
mayersMultiple5Plot = plot(mayersMultiple5ToPlot, transp=25, color=mayersMultiple5Color, linewidth=1, title="MM 5")

///////////////////////////////////////////////////////////
// Support Band Plot
///////////////////////////////////////////////////////////

// Bull Market Support Band - 21 weeks ema + 200 days sma
bullMarketSupportBandColor = #805E73 // Mauve Taupe
fill(ema21WeeksPlot, sma200DaysPlot, color=bullMarketSupportBandColor, transp=75)

// Market Support Band - 4 Years sma + 200 weeks sma
marketSupportBandColor = #A15E49 // Redwood
fill(sma4YearsPlot, sma200WeeksPlot, color=marketSupportBandColor, transp=75)

///////////////////////////////////////////////////////////
// Trend Color Filling
///////////////////////////////////////////////////////////

bearTrendColor = #941C2F // Crimson UA
bullTrendColor = #60A561 // Forest Green Crayola

trend1FillingToPlot = showSupportBandAndTrendFilling ? sma_7_W : na
trend2FillingToPlot = showSupportBandAndTrendFilling ? sma_21_D : na
trendColor = (sma_7_W < sma_21_D) ? bullTrendColor : bearTrendColor
trendFilling_1 = plot(trend1FillingToPlot, transp=100)
trendFilling_2  = plot(trend2FillingToPlot, transp=100)
fill(trendFilling_1, trendFilling_2, color=trendColor, transp=75)

///////////////////////////////////////////////////////////
// PI Cycle Pre Out - Out - In
///////////////////////////////////////////////////////////

dailyClose = security(syminfo.tickerid, '1D', close)

cycleInBackgroundColor = #39d348 // Lime Green
cycleOutBackgroundColor = #ed6565 // Candy Oink
cycleQuestionBackgroundColor = #648aea // Blue Pastel
cycleIPreOutBackgroundColor = #fcac00 // Honey Yellow

cycleIn = showPiCycle and crossover(mayersMultiple06, sma_21_D) ? dailyClose + (dailyClose/100 * 10) : na
plotshape(cycleIn, style=shape.labelup,size=size.small, text="Cycle In", color=cycleInBackgroundColor, textcolor=chartBackgroundColor, location=location.belowbar)

cyclePreOut = showPiCycle and crossover(sma_21_D, mayersMultiple24) ? dailyClose + (dailyClose/100 * 10) : na
plotshape(cyclePreOut, style=shape.labeldown,size=size.small, text="Pre Cycle Out", color=cycleIPreOutBackgroundColor, textcolor=chartBackgroundColor, location=location.abovebar)

cycleOut = showPiCycle and crossunder(sma_350_D_By_2, sma_111_D) ? dailyClose + (dailyClose/100 * 10) : na
plotshape(cycleOut, style=shape.labeldown,size=size.small, text="Cycle Out", color=cycleOutBackgroundColor, textcolor=chartBackgroundColor, location=location.abovebar)

cycleOutBis = showPiCycle and crossunder(sma_111_D, sma_350_D_By_2) ? dailyClose + (dailyClose/100 * 10) : na
plotshape(cycleOutBis, style=shape.labelup,size=size.small, text="Continuation / Capitulation", color=cycleQuestionBackgroundColor, textcolor=chartBackgroundColor, location=location.belowbar)

// Inverse Pi Cycle
priorSum ( p, x ) =>
    sum ( p[1], x - 1 )
piCycleCross ( P, X, Y ) => 
    (( priorSum ( P, X ) * Y)*2 - priorSum ( P, Y ) * X ) / ( X - (Y*2) )
piCross = security ( syminfo.tickerid, "1D", piCycleCross ( dailyClose, 350, 111 ))
anticipatedCrossFunction(P, X, Y) => ( X * (Y - 1) * sma(P, Y - 1) - Y * (X - 1) * sma(P, X - 1) * 2) / (Y*2 - X)
piAnticipatedCross = security( syminfo.tickerid, "1D", anticipatedCrossFunction ( dailyClose, 350, 111 ))
plot(showPiCycle ? piCross : na, color=color.silver)
plot(showPiCycle ? piAnticipatedCross : na, color=color.silver, offset = 1 )

// Cycle Out to Cycle In percentage
if (cycleOutCrossed == 0 and crossunder(sma_350_D_By_2, sma_111_D))
    cycleOutCrossed := 1
    cycleInCrossed := 0
if (cycleInCrossed == 0 and crossover(mayersMultiple06, sma_21_D))
    cycleOutCrossed := 0
    cycleInCrossed := 1
currentPreInValue := round(100 + (mayersMultiple06 - sma_21_D) / sma_21_D * 100)

///////////////////////////////////////////////////////////
// DCA IN - Feigenbaum constant
///////////////////////////////////////////////////////////

timeDuration = showDCAIn ? time - time[1] : na
timeDurationSinceGenesis = showDCAIn ? round((time - 1231502400 * 1000) / timeDuration) : na

// Feigenbaum constant
lm = showDCAIn ? round(timeDurationSinceGenesis/4.669201609102990671853203820466) : na
clm = showDCAIn ? close[lm] : na
plotshape(showDCAIn and crossover(clm[3], close[3]) and clm > close, text='DCA', location=location.belowbar, style=shape.triangleup, color=color.white, size=size.tiny)
bgcolor(showDCAIn and clm > close ? color.new(color.white, 95) : color.new(color.white, 100))

///////////////////////////////////////////////////////////
// Puell Multiple
///////////////////////////////////////////////////////////

mining_revenue_1_D = security("QUANDL:BCHAIN/MIREV", "1D", close[1], barmerge.gaps_off, barmerge.lookahead_on)
sma_355_D = security("QUANDL:BCHAIN/MIREV", "1D", sma(close, 365)[1], barmerge.gaps_off, barmerge.lookahead_on)
puellMultiple = mining_revenue_1_D / sma_355_D
barcolor(puellMultiple < 0.5 ? #039b42 : puellMultiple > 6 ? #d3303e : na)

///////////////////////////////////////////////////////////
// CME Gap
///////////////////////////////////////////////////////////

CME_LAST_WEEK_CLOSE = security("BTC1!", "1W", close[1], barmerge.gaps_off, barmerge.lookahead_on)

var isCmeGapFilled = 0
var cmeGapsFilled = array.new_float()
if (isDaily and showCmeGap and cross(close, CME_LAST_WEEK_CLOSE))
    array.push(cmeGapsFilled, CME_LAST_WEEK_CLOSE)

validDate = isDaily and showCmeGap and time >= timestamp(year(timenow), month(timenow), dayofmonth(timenow) - cmeHistoryBack, 0, 0)
isFriday = dayofweek == dayofweek.friday
cmeFilled = array.includes(cmeGapsFilled, CME_LAST_WEEK_CLOSE) == true
weekNotFilled = isFriday and cmeFilled == false

position = if (dayofweek == dayofweek.monday)
    3
else if (dayofweek == dayofweek.tuesday)
    4
else if (dayofweek == dayofweek.wednesday)
    5
else if (dayofweek == dayofweek.thursday)
    6
else if (dayofweek == dayofweek.friday)
    7
else if (dayofweek == dayofweek.saturday)
    8
else if (dayofweek == dayofweek.sunday)
    9
plotshape(validDate and cmeFilled ? close[position] : na, style=shape.circle, size=size.tiny, color=color.green, location=location.absolute)
plotshape(validDate and cmeFilled == false ? close[position] : na, style=shape.circle, size=size.tiny, color=color.red, location=location.absolute)

///////////////////////////////////////////////////////////
// Fear & Greed
///////////////////////////////////////////////////////////

pmacd      = security(syminfo.tickerid, "D", (close/ema(close, 89) - 1) * 100, barmerge.gaps_off, barmerge.lookahead_on)
ror        = security(syminfo.tickerid, "D", (close - close[89])/close[89] * 100, barmerge.gaps_off, barmerge.lookahead_on)
accDist    = security(syminfo.tickerid, "D", close==high and close==low or high==low ? 0 : ((2 * close - low - high) / (high - low)), barmerge.gaps_off, barmerge.lookahead_on)
vol        = security(syminfo.tickerid, "D", volume, barmerge.gaps_off, barmerge.lookahead_on)
moneyFlow  = if nz(vol) != 0
    sum(accDist * vol, 13) / sum(vol, 13) * 100
volatility = security("BVOL24H", "D", -(close/ema(close, 89) - 1) * 100)
btcdom     = security("BTC.D",   "D",  (1 - close[13] / close) * 100)
vix        = security("VIX" ,    "D", -(close/ema(close, 89) - 1) * 100)
gold       = security("GOLD",    "D",  (1 - close[13] / close) * 100)

val1 = if fearAndGreedMarket == "Crypto"
    volatility
else
    vix

val2 = if fearAndGreedMarket == "Crypto"
    btcdom
else
    gold

fearAndGreedValue = if nz(vol) == 0
    rma((pmacd + ror + val1 + val2) / 4, 1)
else
    rma((pmacd + ror + moneyFlow + val1 + val2) / 5, 1)

f_getText(value) =>
    if value > 50  
        "Extreame Greed" 
    else if value > 20
        "Greed"
    else if value < -25
        "Fear" 
    else if value < -40
        "Extreame Fear"
    else
        "Neutral"

///////////////////////////////////////////////////////////
// Text Info
///////////////////////////////////////////////////////////

textEQ () =>
    tooltip = ''
    tooltip2 = ''
    tooltip := tooltip + " Fear & Greed : " + tostring(round(fearAndGreedValue, 2)) + "% (" + f_getText(fearAndGreedValue) + ")"
    if (showHTFBtcIndicators)
        tooltip := tooltip + "\n" + "CME Close : " + tostring(CME_LAST_WEEK_CLOSE) + (cmeFilled ? "(f)" : "")
        tooltip := tooltip + "\n" + "Puell Multiple Value: " + tostring(puellMultiple, '#.#')
        if (cycleOutCrossed == 1)
            tooltip := tooltip + "\n" + "Pi Cycle Out to In (0% > 100%): " + tostring(currentPreInValue) + "%"
        tooltip := tooltip + "\n\n"
    else
        tooltip := tooltip + "\n\n"
    tooltip := tooltip + "#### First S/R Range ####"
    tooltip := tooltip + "\n" + "SMA 21 D : " + tostring(sma_21_D, '#.#')
    tooltip := tooltip + "\n" + "SMA 7 W : " + tostring(sma_7_W, '#.#')
    
    tooltip := tooltip + "\n\n" + "#### Intermediate S/R ####"
    tooltip := tooltip + "\n" + "SMA 111 D : " + tostring(sma_111_D, '#.#')
    
    tooltip2 := tooltip2 + "\n\n" + "#### Bull Run S/R Range ####"
    tooltip2 := tooltip2 + "\n" + "EMA 21 W : " + tostring(ema_21_W, '#.#')
    tooltip2 := tooltip2 + "\n" + "SMA 200 D : " + tostring(sma_200_D, '#.#')
    
    
    tooltip2 := tooltip2 + "\n\n" + "#### Market S/R Range ####"
    tooltip2 := tooltip2 + "\n" + "SMA 200 W : " + tostring(sma_200_W, '#.#')
    tooltip2 := tooltip2 + "\n" + "SMA 200 D : " + tostring(sma_4_Y, '#.#')
    
    tooltip + tooltip2

if (showTooltip)
    labelText = textEQ ()
    labelXLoc = time_close + (( time_close - time_close[1] ) * 6 ) // Set Label offset
    label = label.new (labelXLoc, hlc3, labelText , xloc.bar_time, yloc.price, color.black, label.style_label_left, color.white, size=size.normal )
    label.delete ( label[1] )   // Delete Previous Label


///////////////////////////////////////////////////////////
// Keltner Channels
///////////////////////////////////////////////////////////

f_kc(_src, _len, _mult, _atrlen) =>
    range = atr(_atrlen) 
    basis = ema(_src, _len)
    [basis + _mult * range, basis - _mult * range]

[upper2, lower2] = f_kc(close, 20, 2., 10)
plot(showKeltnerChannel ? upper2 : na, "KC-2", color.orange, 3, transp = 73)
plot(showKeltnerChannel ? lower2 : na, "KC-2", color.orange, 3, transp = 73)

[upper3, lower3] = f_kc(close, 20, 3., 10)
plot(showKeltnerChannel ? upper3 : na, "KC-3", color.red, 3, transp = 73)
plot(showKeltnerChannel ? lower3 : na, "KC-3", color.red, 3, transp = 73)

///////////////////////////////////////////////////////////
// End of Month background color
///////////////////////////////////////////////////////////

fromDay = -2
toDay = 2
var int[] TradingDays = array.new_int(na)

f_isLeapYear(_year) =>
    // Any year that is evenly divisible by 4 is a leap year
    // A year that is evenly divisible by 100 (for example, 1900) is a leap year only if it is also evenly divisible by 400.
    (_year % 100 == 0) and (_year % 400 != 0) ? true : (_year % 4 == 0)

f_daysInMonth(_year, _month) =>
    int dpm = na
    if _month == 2
        dpm := 28 + (f_isLeapYear(_year) ? 1 : 0)
    else 
        evenMonth = _month % 2 == 0
        beforeAug = _month < 8
        dpm := 30 + (((not evenMonth and beforeAug) or (evenMonth and not beforeAug)) ? 1 : 0)

f_initTradingDays(_arr, _month) =>
    array.clear(_arr)
    for dom = 1 to f_daysInMonth(year, _month)
        array.push(_arr, dom)

if showHTFBtcIndicators and (change(time("M")) or barstate.isfirst)
    f_initTradingDays(TradingDays, month)

startDay = showHTFBtcIndicators ? array.min(array.slice(TradingDays, array.size(TradingDays) - abs(fromDay))) : 0
stopDay = showHTFBtcIndicators ? array.max(array.slice(TradingDays, 0, abs(toDay))) : 0

showStartDay    = showHTFBtcIndicators and timeframe.isdaily and dayofmonth >= startDay
showStopDay     = showHTFBtcIndicators and timeframe.isdaily and dayofmonth <= stopDay

bgcolor(showStartDay ? color.red   : na, transp=85)
bgcolor(showStopDay  ? color.green : na, transp=85)

//Future
stopDaysShort   = max(0, stopDay - dayofmonth)

arrStop = array.new_int(na)
for i=1 to stopDaysShort
    array.push(arrStop, i)

colorFutureDays = showHTFBtcIndicators and barstate.islast
bgcolor(colorFutureDays and timeframe.isdaily and array.includes(arrStop, 1) ? color.green : na, offset=1)
bgcolor(colorFutureDays and timeframe.isdaily and array.includes(arrStop, 2) ? color.green : na, offset=2)
bgcolor(colorFutureDays and timeframe.isdaily and array.includes(arrStop, 3) ? color.green : na, offset=3)
bgcolor(colorFutureDays and timeframe.isdaily and array.includes(arrStop, 4) ? color.green : na, offset=4)

///////////////////////////////////////////////////////////
// Logarithmic
///////////////////////////////////////////////////////////

timeIndex = time < 1279670400000 ? 3.0 : (time - 1279670400000) / 86400000
weight    = (log10(timeIndex + 10) * timeIndex * timeIndex - timeIndex) / 30000

highIntercept = 1.06930947
highSlope = 0.00076
highSlopeCum  = highSlope * timeIndex
lowIntercept = -3.0269716
lowSlope = 0.001329
lowSlopeCum = lowSlope * timeIndex

highLogDev    = timeIndex > 2 ? log(weight) + highIntercept + highSlopeCum : na
lowLogDev   = timeIndex > 2 ? log(weight) + lowIntercept + lowSlopeCum : na

highDev = pow(2.718281828459, highLogDev)
logHigher = plot(isHigherTimeFrame ? highDev : na, color=color.red, transp=0, title="RISK 100%")

logRange = highLogDev - lowLogDev
fib9098Calc = (logRange * 0.9098) + lowLogDev

fib9098Dev = pow(2.718281828459, fib9098Calc)
logHigh = plot(isHigherTimeFrame ? fib9098Dev : na, color=color.red, transp=10, title="RISK  90.98%")

fill(logHigher, logHigh, color=color.red, transp=75)