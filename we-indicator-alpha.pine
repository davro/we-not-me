////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// WE not ME (Bitcoin Indicator Alpha)
//
// Telegram: https://t.me/we_not_me
//
// David Stevens <mail.davro@gmail.com>
// 
// Donations are accepted here
// Bitcoin: 3Ph9wP4vgASFbFP9DAabZETycXY66ebA8Y
// 
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// @version = 4
study("WE Alpha", "WE Alpha", false, format.price, precision = 2)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// WE - MACD 
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

fastLength   = input(title="Fast Length", type=input.integer, defval=12)
slowLength   = input(title="Slow Length", type=input.integer, defval=26)
src          = input(title="Source", type=input.source, defval=close)
signalLength = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9)
smaSource    = input(title="Simple MA(Oscillator)", type=input.bool, defval=false)
smaSignal    = input(title="Simple MA(Signal Line)", type=input.bool, defval=false)

showSignalVWAP          = input(false, title="VWAP")
showSignalDMI           = input(false, title="DMI (Directional Movement Index)")
showSignalStochasticRSI = input(false, title="Stochastic RSI (Relative Strength Index)")


// MACD Fast/Slow macd variables
fastMA = smaSource ? sma(src, fastLength) : ema(src, fastLength)
slowMA = smaSource ? sma(src, slowLength) : ema(src, slowLength)
macd = fastMA - slowMA

// MACD Signal and hist
signal = smaSignal ? sma(macd, signalLength) : ema(macd, signalLength)
hist = (macd - signal) * 6

// MACD Plot colors
colGrowAbove = #26A69A
colGrowBelow = #FFCDD2
colFallAbove = #B2DFDB
colFallBelow = #EF5350
colMacd = #0094ff
colSignal = #ff6a00

// MACD Plots
plot(hist, title="HISTOGRAM", style=plot.style_area, color=(hist>=0 ? (hist[1] < hist ? colGrowAbove : colFallAbove) : (hist[1] < hist ? colGrowBelow : colFallBelow) ), transp=70)
plot(macd, title="MACD", color=colMacd, linewidth=3, transp=0)
plot(signal, title="SIGNAL", color=colSignal, linewidth=2, transp=0)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// WE - Chaikin Money
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

length = input(20, minval=1)
ad = close==high and close==low or high==low ? 0 : ((2*close-low-high)/(high-low))*volume
mf = sum(ad, length) / sum(volume, length) * macd * 5
// check for negative and paint red
// plot(mf, color=#459915, title="MF", linewidth=3)

signalMoneyFlowColor = if (signal > macd)
    color.red
else
    color.green

plot(mf, color=signalMoneyFlowColor, title="FLOW", linewidth=2)
// hline(0, color=#459915, title="ZERO", linestyle=hline.style_dashed)

///////
// signalTest = if (macd > signal and crossover(mf, macd)) 
signalTest = if (mf > macd and macd > signal and crossover(mf, macd)) 
    mf
plotshape(signalTest, style=shape.circle, color=color.yellow, size=size.tiny, location=location.absolute, transp=50, textcolor=color.white)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// WE - VWAP
//
// https://www.investopedia.com/terms/v/vwap.asp
//
// VWAP The volume weighted average price (VWAP) appears as a single line on intraday charts (1 minute, 15 minute, and so on), similar to how a moving average looks.
// Type of the plot. 
// Possible values are: 
// plot.style_line, plot.style_stepline, plot.style_histogram, plot.style_cross, plot.style_area, plot.style_columns, plot.style_circles. Default value is plot.style_line.
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

i_ma_l      = input(100, "Histogram MA lemgth")
i_ma_breaks = input(true, "Show MA / Hist MA / Zero crosses")
i_bc        = input(false, "Colour Bars to Hist MA line ")

avg = 0.0

i_series = (close)
avg := sma(i_series, 200)
vw = vwap
diff = (vw - avg) / 3 

// Divide by three to scale for the resoultion of the alpha indicator
hist_ma = sma(diff, i_ma_l) / 3
cross_ma = cross(diff, hist_ma) 
cross_zero = cross(hist_ma,0)
col=diff > 0 ? color.lime : color.red
col_ma = hist_ma > diff and hist_ma > 0 ? color.red : hist_ma < diff and hist_ma < 0 ? color.blue : col

// bgcolor(i_ma_breaks and cross_ma ? color.orange: na, transp=20)
// bgcolor(i_ma_breaks and cross_zero ? color.blue : na, transp=20)

// PLOTS
p_hist_ma = plot(showSignalVWAP ? hist_ma : na, color=col_ma, linewidth=2, title="VWAP")
hist1     = plot(showSignalVWAP ? diff : na, histbase = 0, style= plot.style_line, color=col, linewidth=2, title="VWAP DIFF")
// plot(diff, color=col, transp=10)

mid=hline(0, title='Mid', color=color.blue, linestyle=hline.style_dashed, linewidth=1)
// barcolor(i_bc ? col_ma : na)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Directional Movement Index
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

lensig = input(14, title="ADX Smoothing", minval=1, maxval=50)
len = input(14, minval=1, title="DI Length")
up = change(high)
down = -change(low)
plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
trur = rma(tr, len)

plus = fixnan(100 * rma(plusDM, len) / trur)
minus = fixnan(100 * rma(minusDM, len) / trur)
sum = plus + minus

adx = 100 * rma(abs(plus - minus) / (sum == 0 ? 1 : sum), lensig)

plot(showSignalDMI ? adx * (macd / 50) : na, color=#FF006E, title="ADX")
plot(showSignalDMI ? plus * (macd / 50) : na, color=#0094FF, title="+DI")
plot(showSignalDMI ? minus * (macd / 50) : na, color=#FF6A00, title="-DI")

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Stochastic RSI
//
// The Stochastic RSI (StochRSI) is an indicator used in technical analysis that 
// ranges between zero and one (or zero and 100 on some charting platforms) 
// and is created by applying the Stochastic oscillator formula to a set of 
// relative strength index (RSI) values
//
// https://www.investopedia.com/terms/s/stochrsi.asp
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
smoothK     = input(3, "K", minval=1)
smoothD     = input(3, "D", minval=1)
lengthRSI   = input(14, "RSI Length", minval=1)
lengthStoch = input(14, "Stochastic Length", minval=1)

rsi1 = rsi(close, lengthRSI)
k = sma(stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = sma(k, smoothD)

alphaResolution = (macd / 50)

plot(showSignalStochasticRSI ? k * alphaResolution : na, "K", color=color.purple)
plot(showSignalStochasticRSI ? d * alphaResolution : na, "D", color=color.orange)

// h0 = hline(80, "Upper Band", color=#606060)
// h1 = hline(20, "Lower Band", color=#606060)
// fill(h0, h1, color=#9915FF, transp=80, title="Background")

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Signals - using the above variables
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// MACD - SIGNAL Green Dot
signalGreenCross = if (crossover(macd, signal) and signal > 0) 
    signal
plotshape(signalGreenCross, style=shape.circle, color=color.green, size=size.tiny, location=location.absolute, transp=0)

// MACD - SIGNAL Red Dot
signalDeathCross = if (crossunder(macd, signal)) 
    signal
plotshape(signalDeathCross, style=shape.circle, color=color.red, size=size.tiny, location=location.absolute, transp=0, textcolor=color.white)

////////////////////////////////////////////////////////////////////////////////
// MACD - SIGNAL Green Diamond
signalGreenCrossDiamond = if (crossover(macd, signal) and signal < 0) 
    signal
plotshape(signalGreenCrossDiamond, style=shape.diamond, color=color.green, size=size.small, location=location.absolute, transp=0)

// MACD - SIGNAL Red Diamond
signalRedCrossDiamond = if (crossunder(macd, signal) and signal > 0) 
    signal
plotshape(signalRedCrossDiamond, style=shape.diamond, color=color.red, size=size.small, location=location.absolute, transp=0)


////////////////////////////////////////////////////////////////////////////////
// DEV AREA 
//
// signalMoneyFlowColor = if (signal > macd)
//     color.red
// else
//     color.green
// plot(mf, color=signalMoneyFlowColor, title="FLOW", linewidth=2)
